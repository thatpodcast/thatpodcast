parameters:
    # Adds a fallback DATABASE_URL if the env var is not set.
    # This allows you to run cache:warmup even if your
    # environment variables are not available yet.
    # You should not need to change this value.
    env(PASSWORD_FOR_BEAU): ''
    env(PASSWORD_FOR_DAVE): ''

security:
    providers:
        in_memory:
            memory:
                users:
                    beau:
                        password: '%env(resolve:PASSWORD_FOR_BEAU)%'
                        roles: 'ROLE_ADMIN'
                    dave:
                        password: '%env(resolve:PASSWORD_FOR_DAVE)%'
                        roles: 'ROLE_ADMIN'
                    vip:
                        password: '%env(resolve:PASSWORD_FOR_VIP)%'
                        roles: 'ROLE_VIP'
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        vip:
            pattern: ^/vip.rss
            http_basic: true
        main:
            anonymous: true
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                login_path: login
                check_path: login
            logout:
                path: logout
                target: /

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/vip.rss, roles: ROLE_VIP }
